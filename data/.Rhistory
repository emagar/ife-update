ymd("20210723"), # 27
ymd("20220723")  # 28
),
end = c(
ymd("19971030"), #  1
ymd("19981030"), #  2
ymd("19991030"), #  3
ymd("20001210"), #  4
ymd("20011030"), #  5
ymd("20021030"), #  6
ymd("20031104"), #  7
ymd("20041104"), #  8
ymd("20051104"), #  9
ymd("20061104"), # 10
ymd("20080214"), # 11
ymd("20080820"), # 12
ymd("20090820"), # 13
ymd("20101030"), # 14
ymd("20111214"), # 15
ymd("20130219"), # 16
ymd("20131030"), # 17
ymd("20140410"), # 18
ymd("20150410"), # 19
ymd("20160410"), # 20
ymd("20170404"), # 21
ymd("20180404"), # 22
ymd("20190404"), # 23
ymd("20200416"), # 24
ymd("20200722"), # 25
ymd("20210722"), # 26
ymd("20220722"), # 27
ymd("20230112")  # 28 my 53rd bday
),
approx.yr = c(1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014.1, 2014.2, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023),
term =   c(2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 6, 7, 7, 8, 9, 10, 11, 12, 12, 12, 13, 13, 13, 14, 15, 15, 15),
term.a = c(2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 6, 7, 7, 8, 9, "a","b","c","c","c","d","d","d","e","f","f","f")
)
################################################################
## select temporal range of full analysis (broken down below) ##
################################################################
## terms <- 12:13
## terms.grep <- "[cd]"
## terms <- 4:11
## terms.grep <- "[456789ab]"
## terms <- 4:10
## terms.grep <- "[45679a]"
terms <- 23
terms.grep <- "[23]"
#############################################
## subset ids and periodicization to range ##
#############################################
ids <- ids[grep(pattern = terms.grep, ids$tenure),]
yr.by.yr <- yr.by.yr[grep(pattern = terms.grep, yr.by.yr$term.a),]
ids[, c("column","sponsor","tenure")] # inspect
#############################################################
## select temporal unit -- discrete periods to be analyzed ##
## e.g. terms, year-by-year, semester...                   ##
#############################################################
table(term=yr.by.yr$term, yrn=yr.by.yr$yrn) # inspect
#tees <- yr.by.yr$yrn # years 8:18 cover terms 4:11, ug to 2014 reform
## tees <- c(12:13) # post-2014 terms córdoba I and II
## tees <- c(4,6:11) # terms ugalde I+II valdés I II III IV and V+VI
## tees <- c(4,6:10) # terms ugalde I+II valdés I II III IV and V
tees <- c(2:3)
T <- length(tees)
##########################################
## Prep object to receive yearly priors ##
##########################################
prior.location <- data.frame(matrix(NA, nrow = length(ids$column), ncol = T))
rownames(prior.location) <- ids$column
colnames(prior.location) <- paste0("term", tees)
prior.precision <- prior.location
prior.precision[] <- 1 # for N=2-on
#
## # assign priors for first round in council term 12
## prior.location[] <- 0
## prior.location  ["favela",] <-  2
## prior.location["murayama",] <- -2
## prior.precision[,1] <- 1
## prior.precision  ["favela",] <- 4
## prior.precision["murayama",] <- 4
## #
## # assign priors for first round in council terms 4 to 11
## prior.location[,1] <- 0
## prior.location["alcantar",1] <-  2
## prior.location ["sanchez",1] <- -2
## prior.precision[,1] <- 1
## prior.precision["alcantar",1] <- 4
## prior.precision ["sanchez",1] <- 4
## # assign priors for first round in council
## prior.location[] <- 0
## prior.location["alcantar",] <-  2
## prior.location ["sanchez",] <- -2
## prior.location["banos",] <-  2
## prior.location["figueroa",] <- -2
## prior.precision[,1] <- 1
## prior.precision["alcantar",] <- 4
## prior.precision ["sanchez",] <- 4
## prior.precision ["banos",] <- 4
## prior.precision ["figueroa",] <- 4
## #
# assign priors for first round in council terms 2 and 3
prior.location[] <- 0
prior.location  ["merino",] <-  2
prior.location["cardenas",] <- -2
prior.precision[,1] <- 1
prior.precision  ["merino",] <- 4
prior.precision["cardenas",] <- 4
prior.location  # inspect
prior.precision # inspect
##############################
## will receive party means ##
##############################
party.locations <- data.frame(matrix(NA, ncol = T, nrow = 5))
colnames(party.locations) <- colnames(prior.location)
rownames(party.locations) <- c("pri", "pan", "prd", "pvem", "morena")
#######################################
## term-by-term start-en and members ##
#######################################
terms.dates <- data.frame(
term = 1:15,
term.a = c(1:9,"a","b","c","d","e","f"),
vot1st = ymd("19940603", "19961031", "20001211", "20031105", "20071217", "20080215", "20080821", "20101031", "20111215", "20130220", "20131031", "20140411", "20170405", "20200417", "20200723"),
votlast = ymd("19960712", "20001114", "20031021", "20071128", "20080128", "20080814", "20101027", "20111214", "20130206", "20131028", "20140402", "20170328", "20200401", "20200708", "20230403"))
terms.dates$start <- terms.dates$vot1st
terms.dates$end <- c(terms.dates$vot1st[2:15], NA)
# merge term 5 to 4
terms.dates$end[terms.dates$term==4] <- terms.dates$end[terms.dates$term==5]
terms.dates <- terms.dates[-which(terms.dates$term==5),]
# mid-date
terms.dates$mid <- as.Date(terms.dates$start + as.duration(interval(terms.dates$start, terms.dates$end))/2) # as.Date drop UTC
#
## # members
## tmp <- rbind(
## c("segob", "creel", "granados", "pinchetti", "pozas", "woldenberg", "zertuche", "senpri", "senprd", "dippri", "dippan"),
## c("woldenberg", "barragan", "cantu", "cardenas", "lujambio", "merino", "molinar", "peschard", "zebadua", NA, NA),
## c("woldenberg", "barragan", "cantu", "cardenas", "lujambio", "luken", "merino", "peschard", "rivera", NA, NA),
## c("ugalde", "albo", "alcantar", "andrade", "glezluna", "latapi", "lopezflores", "morales", "sanchez", NA, NA),
## c("albo", "alcantar", "andrade", "glezluna", "latapi", "lopezflores", "morales", "sanchez", NA, NA, NA),
## c("valdes", "albo", "alcantar", "andrade", "banos", "glezluna", "lopezflores", "nacif", "sanchez", NA, NA),
## c("valdes", "alcantar", "andrade", "banos", "elizondo", "figueroa", "guerrero", "nacif", "sanchez", NA, NA),
## c("valdes", "banos", "elizondo", "figueroa", "guerrero", "nacif", NA, NA, NA, NA, NA),
## c("valdes", "banos", "cordova", "elizondo", "figueroa", "garcia", "guerrero", "marvan", "nacif", NA, NA),
## c("valdes", "banos", "cordova", "elizondo", "figueroa", "guerrero", "marvan", "nacif", NA, NA, NA),
## c("cordova", "banos", "marvan", "nacif", NA, NA, NA, NA, NA, NA, NA),
## c("cordova", "andrade2", "banos", "favela", "galindo", "murayama", "nacif", "ruiz", "sanchez", "santiago", "snmartin"),
## c("cordova", "andrade2", "banos", "favela", "murayama", "nacif", "ravel", "rivera2", "ruiz", "snmartin", "zavala"),
## c("cordova", "favela", "murayama", "ravel", "rivera2", "ruiz", "zavala", NA, NA, NA, NA),
## c("cordova", "favela", "murayama", "faz", "humphrey", "kib", "magana", "ravel", "rivera2", "ruiz", "zavala")
## )
## colnames(tmp) <- paste0("m", 1:11)
## term.members <- cbind(terms.dates, tmp)
## # inspect
## tmp <- term.members[4, grep("^m[0-9]", colnames(terms.dates))]
## tmp[!is.na(tmp)]
##############################################
## Read votes, exported by code/data-prep.r ##
##############################################
vot.raw <-read.csv("v23.csv",  header=TRUE)
## vot.raw <-read.csv("v456789ab.csv",  header=TRUE)
## vot.raw <-read.csv("vcde.csv",  header=TRUE)
vot <- vot.raw # duplicate for manipulation
#########################################################
## term 5 has one contested vote only, merge to term 4 ##
#########################################################
sel <- which(vot$term==5)
if (length(sel)>0) vot$term[sel] <- 4
#######################################################################################
## term 11 has 2 contested votes, drop it (tried merging to term 10, no convergence) ##
#######################################################################################
sel <- which(vot$term==11)
#if (length(sel)>0) vot$term[sel] <- 10
if (length(sel)>0) vot <- vot[-sel,]
###########################################
## using terms: subset to desired terms  ##
###########################################
sel <- which(vot$term %in% tees)
vot <- vot[sel,]
# add temporal aggregation as column t
vot$t <- NA
for (i in 1:T){
sel <- which(vot$term==tees[i])
vot$t[sel] <- i
}
## ####################################################
## ## using approx.yrs: add temporal periodicization ##
## ####################################################
## # approx yr version
## tmp <- vot$date # extract dates
## tmp2 <- tmp3 <- tmp # triplicate
## for (i in 1:length(tmp)){
##     sel <- which(yr.by.yr$start<=tmp[i] & yr.by.yr$end>=tmp[i])
##     tmp2[i] <- yr.by.yr$approx.yr[sel] # returns yr vote belongs to
##     tmp3[i] <- yr.by.yr$yrn[sel]         # returns t vote belongs to
## }
## vot$yrn <- as.numeric(tmp2)
## vot$t  <- as.numeric(tmp3)
## # explore
## table(dunan=vot$dunan, yr=vot$yrn)
## with(vot, table(term=term[dunan==0], yr=yr[dunan==0]))
###########################################
## summarize then drop uncontested votes ##
###########################################
table(factor(vot$dunan, labels = c("contested","not")), vot$term, useNA = "ifany")
table(factor(vot$dunan, labels = c("contested","not")), useNA = "ifany")
sel <- which(vot$dunan==1)
if (length(sel)>0) vot <- vot[-sel,]
#######################################################
## ################################################# ##
## ## THIS IS DONE BELOW, IN MEMO'S VECTORIZATION ## ##
## ################################################# ##
#######################################################
## #########################################################################
## ## summarize and recode vote values --- probit requires 0s and 1s only ##
## #########################################################################
## tmp <- vot[,column]
## table(vote=as.matrix(tmp), useNA = "always")
## # recode
## tmp[tmp==0] <- NA    ## 1s are ayes, 0s nays
## tmp[tmp>2]  <- NA
## tmp[tmp==2] <- 0
## table(vote=as.matrix(tmp), useNA = "always")
## # return to vote object
## vot[,column] <- tmp
####################################################################################################
## identify item anchors and place them as votes 1 and 2, both should point aye = north/right     ##
## if necessary, recode ayes/nays so that aye points to desired side                              ##
## ** term==4 **                                                                                  ##
## - folio 2401 Agenda power for President (PRI-sponsored): should candidate for top-level        ##
## appointment, proposed by Council President without relevant commission's consent, be           ##
## ratified? (Minority=pan minus Morales, Latapí, nay) Aye=right                                  ##
## - folio 2479 Scope of IFE authority: must PVEM statutes make party leaders accountable to      ##
## rank-and-file? (Andrade, Lpz Flores, Morales, Gmz Alcántar, nay) Aye=left                      ##
## ** term==6 **                                                                                  ##
## - folio 3641 Designación Director Ejecutivo Serv Prof Elect (Minority pan minus Nacif, nay)    ##
## Aye=right                                                                                      ##
## - folio 3924 Fine PRD and coalition partners for a negative campaign ad against the PRI in     ##
## Baja California (Minority pan minus Albo, nay) Aye=right                                       ##
## ** term==7 **                                                                                  ##
## - folio 6127 Penalty to PVEM federal deputies for TV advertisement promoting the death penalty ##
## (Minority PRI, PVEM, nay) Aye=left, needs justification (other than free speech?)              ##
## - folio 6174 Drop libel case against PAN for sopa de letras newspaper negative ad against the  ##
## PRI (Minority PRI, PVEM, nay) Aye=left                                                         ##
## ** term==8 **                                                                                  ##
## - folio 7421 Penalty to Enrique Peña (Minority pri), aye=left                                  ##
## - folio 7633 PRD-sponsored penalty to governor of state of Guerrero (Minority prd), aye=right  ##
## ** term==9 **                                                                                  ##
## - folio 8317 Break PRI's denuncia against PAN in two, fine and FCH's direct responsibility     ##
## (Minority PRI with Córdova) Aye=left                                                           ##
## - folio 8320 PRI's denuncia against FCH (Minority PRI plus Córdova) Aye=left                   ##
## - folio 8814 Aristegui's vs PRD-PT with engrose (Minority PRD plus Nacif) Aye=left             ##
## ** term==10 **                                                                                 ##
## - folio 9230 Sanción del pri al pan y gob huauchinango (Minority = pri) aye = left             ##
## - folio 9408 Declarar leve la multa a un periódico (Minority pri plus nacif) aye = right       ##
####################################################################################################
anch <- c(  385,  1045  # term==2  dates 16-12-97 14-11-00
,  1298,  1669  # term==3          6-4-01  28-1-03
,  2401,  2479  # term==4:5       23-8-04  31-1-05
,  3641,  3924  # term==6         20-2-08  23-5-08
,  6127,  6174  # term==7         29-3-09   6-4-09
,  7421,  7633  # term==8         18-1-11   6-6-11
,  8317,  8320  # term==9         21-3-12  21-3-12
,  9230,  9408  # term==10:11      8-5-13  26-9-13
, 10096, 10268  # term==12         2-7-14  7-10-14
)
anchors <- which(vot$folio %in% anch)
# some votes need aye/nay reversal to point North
sel <- which(vot$folio[anchors] %in% c(385, 2479, 6127, 6174, 7421, 8317, 8320, 9230, 10096, 10228))
tmp <- vot[anchors[sel], ids$column] # subset votes that must chg
for (i in 1:nrow(tmp)){
tmp2 <- as.character(tmp[i,]) # extract vector, to character
tmp2 <- mapvalues(tmp2, from = c(1,2), to = c(2,1))
tmp[i,] <- as.numeric(tmp2)
}
vot[anchors[sel], ids$column] <- tmp
rm(tmp,tmp2,anch)
#########################################################
## move anchor votes to start of time series, so that  ##
## they appear as votes 1 and 2 when term is subsetted ##
#########################################################
vot <- rbind(vot[anchors,], vot[-anchors,])
#head(vot)
rm(anchors) # indices no longer valid
## ###########################################################
## ## use votes in 1st half of term==7 only for exploration ##
## ###########################################################
## sel <- which(vot$date > ymd("2009-06-30"))
## vot <- vot[-sel,]
####################################
## will receive posterior samples ##
####################################
post.samples <- vector("list", T)
names(post.samples) <- paste0("term", tees)
rm(i,sel) # clean
##########################################
## pick one year (turn into loop later) ##
##########################################
report_prez <- function(x) {
prez <- c("(carpizo 1994-96)", "(woldenberg I 1996-2000)", "(woldenberg II 2000-03)", "(ugalde 2003-07)", "(albo 2008)", "(valdés I 2008)", "(valdés II 2008-10)", "(valdés III 2010-11)", "(valdés IV 2011-13)", "(valdés V 2013)", "(valdés VI 2013-14)", "(córdoba I 2014-)")
return(prez[x])
}
t <- c(1:T)[1]
paste("t =", t, "is term", tees[t], report_prez(tees[t])); rm(report_prez)
#for (t in 1:7){
###################################################
## by terms: determine members and their parties ##
###################################################
## sel <- c("c","d")
## sel <- c("4","6","7","8","9","a","b")
sel <- c("2","3")
sel <- sel[t]
sel    <- grep(pattern = sel, ids$tenure)
party.t  <- ids$party [sel]
column.t <- ids$column[sel]
## ####################################################
## ## yr.approx: determine members and their parties ##
## ####################################################
## sel <- yr.by.yr[yr.by.yr$term==tees[t],]$term.a
## sel    <- grep(pattern = sel, ids$tenure) # ugalde and valdés councils
## party.t  <- ids$party [sel]
## column.t <- ids$column[sel]
##############################################
## subset votes to period t and its members ##
##############################################
rc <- vot[vot$t==t, column.t]
dim(rc)
## head(vot[vot$t==1,])
## head(rc)
##########################
## Rosas, vectorization ##
##########################
rc <- as.data.frame(t(rc))
M <- nrow(rc) # total members in period
V <- ncol(rc) # total votes in period
map.vote.indices   <- data.frame(actual=as.numeric(colnames(rc)),
sequential=1:V)
map.member.indices <- data.frame(actual=rownames(rc),
sequential=1:M)
map.time.indices <- data.frame(actual=tees,
#yr=yr.by.yr$approx.yr,
sequential=1:T)
#####################################################
## Melt RC (turn it into long format)              ##
## see https://seananderson.ca/2013/10/19/reshape/ ##
#####################################################
rc.2 <- as.data.frame (rc)
colnames (rc.2) <- 1:V
rc.2$member <- 1:M
molten.rc <- reshape2::melt(rc.2, id.vars="member", variable.name="vote", value.name="rc")
#head(molten.rc, 10)
molten.rc$rc <- car::recode (molten.rc$rc, "0=NA") # non-members' slots, if any, to NA
# will try w/o 4may2022 #molten.rc <- na.omit (molten.rc)                   # drops non-members' slots, if any
molten.rc$rc <- car::recode (molten.rc$rc, "2=0; c(3,4,5,6)=NA") # abstain|absent|recuse to NA
ife.data.vector <-
dump.format(list(y = molten.rc$rc
, n.member = M
, n.item = V
, n.obs  = nrow(molten.rc)
#                   , mean.theta = prior.location[map.member.indices$actual ,t]
#                   , precision.theta = prior.precision[map.member.indices$actual ,t]
, vote   = molten.rc$vote
, member = molten.rc$member
#                   , a = c(2,1,1.5)   # known component sizes: 4 left, 2 pan, 3 pri
#                   , a = c(1,1.5,2)   # known component sizes: 2 pan, 3 pri, 4 left
, a = c(2,2,2)    # agnostic component sizes
))
ife.parameters = c("theta", "alpha", "beta", "deviance"
, "component", "promedios", "gaps")
ife.inits <- function() {
dump.format(
list(
#      theta = c(rnorm(3), NA, rnorm(4), NA)
theta   = rnorm(M)
#                     w  b   c  c  l  m  m  p  z
# , component = c(3, NA, 1, 1, 2, 3, NA, 3, 1)
, alpha = rnorm(V)
#      , beta  = rnorm(V)
, beta  = c(NA, NA, rnorm(V-2))
#      , mix_proportions = c(0.33, .22, .45)  # known component sizes: 3 left, 2 pan, 4 pri
#      , mix_proportions = c(0.45, .22, .33)  # known component sizes: 4 left, 2 pan, 3 pri
, mix_proportions = c(.33, .33, .33)  # agnostic component sizes
,'.RNG.name'="base::Wichmann-Hill"
,'.RNG.seed'= 1971)   #randomNumbers(n = 1, min = 1, max = 1e+04, col=1))
)
}
## # inspect spike priors to code ife.vector
## point.est
## prior.location[map.member.indices$actual,t]
## prior.precision[map.member.indices$actual,t]
# read model
source ("../code/mix-model-gr.r")  # GR: changed call to model here
results <- run.jags(
model    = ife.model.items.mix,
monitor  = ife.parameters,
method   = "parallel",
n.chains = 2,
data     = ife.data.vector,
inits    = list (ife.inits(), ife.inits()),
#thin = 20, burnin = 29000, sample = 3000,
#thin = 250, burnin = 50000, sample = 200,
thin =  50, burnin = 10000, sample = 200,
#thin =   5, burnin =   200, sample = 200,
plots = FALSE)
chains <- mcmc.list(list (results$mcmc[[1]], results$mcmc[[2]]))
dim(chains[[1]])
# check model convergence
gelman.diag <- gelman.diag (chains, multivariate=F)
gelman.diag
# read model
source ("../code/mix-model-gr.r")  # GR: changed call to model here
results <- run.jags(
model    = ife.model.items.mix,
monitor  = ife.parameters,
method   = "parallel",
n.chains = 2,
data     = ife.data.vector,
inits    = list (ife.inits(), ife.inits()),
#thin = 20, burnin = 29000, sample = 3000,
#thin = 250, burnin = 50000, sample = 200,
thin =  50, burnin = 10000, sample = 200,
#thin =   5, burnin =   200, sample = 200,
plots = FALSE)
chains <- mcmc.list(list (results$mcmc[[1]], results$mcmc[[2]]))
dim(chains[[1]])
# check model convergence
gelman.diag <- gelman.diag (chains, multivariate=F)
gelman.diag
ife.inits <- function() {
dump.format(
list(
#      theta = c(rnorm(3), NA, rnorm(4), NA)
theta   = rnorm(M)
#                     w  b   c  c  l  m  m  p  z
, component = c(3, NA, 1, 1, 2, 3, NA, 3, 1)
, alpha = rnorm(V)
#      , beta  = rnorm(V)
, beta  = c(NA, NA, rnorm(V-2))
#      , mix_proportions = c(0.33, .22, .45)  # known component sizes: 3 left, 2 pan, 4 pri
#      , mix_proportions = c(0.45, .22, .33)  # known component sizes: 4 left, 2 pan, 3 pri
, mix_proportions = c(.33, .33, .33)  # agnostic component sizes
,'.RNG.name'="base::Wichmann-Hill"
,'.RNG.seed'= 1971)   #randomNumbers(n = 1, min = 1, max = 1e+04, col=1))
)
}
# read model
source ("../code/mix-model-gr.r")  # GR: changed call to model here
results <- run.jags(
model    = ife.model.items.mix,
monitor  = ife.parameters,
method   = "parallel",
n.chains = 2,
data     = ife.data.vector,
inits    = list (ife.inits(), ife.inits()),
#thin = 20, burnin = 29000, sample = 3000,
#thin = 250, burnin = 50000, sample = 200,
thin =  50, burnin = 10000, sample = 200,
#thin =   5, burnin =   200, sample = 200,
plots = FALSE)
chains <- mcmc.list(list (results$mcmc[[1]], results$mcmc[[2]]))
dim(chains[[1]])
# check model convergence
gelman.diag <- gelman.diag (chains, multivariate=F)
gelman.diag
## GR: Moved collected outcomes here
promedios <- chains[[1]][,grep("promedios", colnames (chains[[1]]))]
gaps <- chains[[1]][,grep("gaps", colnames (chains[[1]]))]
thetas <- chains[[1]][,grep("theta", colnames (chains[[1]]))]
components <- chains[[1]][,grep("compo", colnames (chains[[1]]))]
colMeans (promedios)
colMeans (gaps)
th <- colMeans (thetas)
names(th) <- column.t
modas <- apply(components, 2, FUN = function(x) {
uniqv <- unique(x)
return(uniqv[which.max(tabulate(match(x, uniqv)))])
}
)
names(modas) <- column.t
cbind(modas, th)
source ("../code/mix-model-gr.r")  # GR: changed call to model here
results <- run.jags(
model    = ife.model.items.mix,
monitor  = ife.parameters,
method   = "parallel",
n.chains = 2,
data     = ife.data.vector,
inits    = list (ife.inits(), ife.inits()),
#thin = 20, burnin = 29000, sample = 3000,
#thin = 250, burnin = 50000, sample = 200,
thin =  50, burnin = 10000, sample = 200,
#thin =   5, burnin =   200, sample = 200,
plots = FALSE)
chains <- mcmc.list(list (results$mcmc[[1]], results$mcmc[[2]]))
dim(chains[[1]])
# check model convergence
gelman.diag <- gelman.diag (chains, multivariate=F)
gelman.diag
promedios <- chains[[1]][,grep("promedios", colnames (chains[[1]]))]
gaps <- chains[[1]][,grep("gaps", colnames (chains[[1]]))]
thetas <- chains[[1]][,grep("theta", colnames (chains[[1]]))]
components <- chains[[1]][,grep("compo", colnames (chains[[1]]))]
colMeans (promedios)
colMeans (gaps)
th <- colMeans (thetas)
names(th) <- column.t
modas <- apply(components, 2, FUN = function(x) {
uniqv <- unique(x)
return(uniqv[which.max(tabulate(match(x, uniqv)))])
}
)
names(modas) <- column.t
cbind(modas, th)
